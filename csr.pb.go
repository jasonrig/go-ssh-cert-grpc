// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: csr.proto

package go_ssh_cert_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CSR_Type int32

const (
	CSR_USER CSR_Type = 0
	CSR_HOST CSR_Type = 1
)

// Enum value maps for CSR_Type.
var (
	CSR_Type_name = map[int32]string{
		0: "USER",
		1: "HOST",
	}
	CSR_Type_value = map[string]int32{
		"USER": 0,
		"HOST": 1,
	}
)

func (x CSR_Type) Enum() *CSR_Type {
	p := new(CSR_Type)
	*p = x
	return p
}

func (x CSR_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CSR_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_csr_proto_enumTypes[0].Descriptor()
}

func (CSR_Type) Type() protoreflect.EnumType {
	return &file_csr_proto_enumTypes[0]
}

func (x CSR_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CSR_Type.Descriptor instead.
func (CSR_Type) EnumDescriptor() ([]byte, []int) {
	return file_csr_proto_rawDescGZIP(), []int{0, 0}
}

type CSR_CriticalOption int32

const (
	CSR_FORCE_COMMAND  CSR_CriticalOption = 0
	CSR_SOURCE_ADDRESS CSR_CriticalOption = 1
)

// Enum value maps for CSR_CriticalOption.
var (
	CSR_CriticalOption_name = map[int32]string{
		0: "FORCE_COMMAND",
		1: "SOURCE_ADDRESS",
	}
	CSR_CriticalOption_value = map[string]int32{
		"FORCE_COMMAND":  0,
		"SOURCE_ADDRESS": 1,
	}
)

func (x CSR_CriticalOption) Enum() *CSR_CriticalOption {
	p := new(CSR_CriticalOption)
	*p = x
	return p
}

func (x CSR_CriticalOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CSR_CriticalOption) Descriptor() protoreflect.EnumDescriptor {
	return file_csr_proto_enumTypes[1].Descriptor()
}

func (CSR_CriticalOption) Type() protoreflect.EnumType {
	return &file_csr_proto_enumTypes[1]
}

func (x CSR_CriticalOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CSR_CriticalOption.Descriptor instead.
func (CSR_CriticalOption) EnumDescriptor() ([]byte, []int) {
	return file_csr_proto_rawDescGZIP(), []int{0, 1}
}

type CSR_Extension int32

const (
	CSR_NO_TOUCH_REQUIRED       CSR_Extension = 0
	CSR_PERMIT_X11_FORWARDING   CSR_Extension = 1
	CSR_PERMIT_AGENT_FORWARDING CSR_Extension = 2
	CSR_PERMIT_PORT_FORWARDING  CSR_Extension = 3
	CSR_PERMIT_PTY              CSR_Extension = 4
	CSR_PERMIT_USER_RC          CSR_Extension = 5
)

// Enum value maps for CSR_Extension.
var (
	CSR_Extension_name = map[int32]string{
		0: "NO_TOUCH_REQUIRED",
		1: "PERMIT_X11_FORWARDING",
		2: "PERMIT_AGENT_FORWARDING",
		3: "PERMIT_PORT_FORWARDING",
		4: "PERMIT_PTY",
		5: "PERMIT_USER_RC",
	}
	CSR_Extension_value = map[string]int32{
		"NO_TOUCH_REQUIRED":       0,
		"PERMIT_X11_FORWARDING":   1,
		"PERMIT_AGENT_FORWARDING": 2,
		"PERMIT_PORT_FORWARDING":  3,
		"PERMIT_PTY":              4,
		"PERMIT_USER_RC":          5,
	}
)

func (x CSR_Extension) Enum() *CSR_Extension {
	p := new(CSR_Extension)
	*p = x
	return p
}

func (x CSR_Extension) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CSR_Extension) Descriptor() protoreflect.EnumDescriptor {
	return file_csr_proto_enumTypes[2].Descriptor()
}

func (CSR_Extension) Type() protoreflect.EnumType {
	return &file_csr_proto_enumTypes[2]
}

func (x CSR_Extension) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CSR_Extension.Descriptor instead.
func (CSR_Extension) EnumDescriptor() ([]byte, []int) {
	return file_csr_proto_rawDescGZIP(), []int{0, 2}
}

type CSR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            CSR_Type                   `protobuf:"varint,1,opt,name=type,proto3,enum=ssh_cert.CSR_Type" json:"type,omitempty"`
	CriticalOptions []*CSR_CriticalOptionValue `protobuf:"bytes,2,rep,name=criticalOptions,proto3" json:"criticalOptions,omitempty"`
	Extensions      []*CSR_ExtensionValue      `protobuf:"bytes,3,rep,name=extensions,proto3" json:"extensions,omitempty"`
	KeyId           string                     `protobuf:"bytes,4,opt,name=keyId,proto3" json:"keyId,omitempty"`
	Serial          uint64                     `protobuf:"varint,5,opt,name=serial,proto3" json:"serial,omitempty"`
	Principals      []string                   `protobuf:"bytes,6,rep,name=principals,proto3" json:"principals,omitempty"`
	ValidAfter      uint64                     `protobuf:"varint,7,opt,name=validAfter,proto3" json:"validAfter,omitempty"`
	ValidBefore     uint64                     `protobuf:"varint,8,opt,name=validBefore,proto3" json:"validBefore,omitempty"`
	PublicKeyType   string                     `protobuf:"bytes,9,opt,name=publicKeyType,proto3" json:"publicKeyType,omitempty"`
	PublicKey       []byte                     `protobuf:"bytes,10,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *CSR) Reset() {
	*x = CSR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSR) ProtoMessage() {}

func (x *CSR) ProtoReflect() protoreflect.Message {
	mi := &file_csr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSR.ProtoReflect.Descriptor instead.
func (*CSR) Descriptor() ([]byte, []int) {
	return file_csr_proto_rawDescGZIP(), []int{0}
}

func (x *CSR) GetType() CSR_Type {
	if x != nil {
		return x.Type
	}
	return CSR_USER
}

func (x *CSR) GetCriticalOptions() []*CSR_CriticalOptionValue {
	if x != nil {
		return x.CriticalOptions
	}
	return nil
}

func (x *CSR) GetExtensions() []*CSR_ExtensionValue {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *CSR) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *CSR) GetSerial() uint64 {
	if x != nil {
		return x.Serial
	}
	return 0
}

func (x *CSR) GetPrincipals() []string {
	if x != nil {
		return x.Principals
	}
	return nil
}

func (x *CSR) GetValidAfter() uint64 {
	if x != nil {
		return x.ValidAfter
	}
	return 0
}

func (x *CSR) GetValidBefore() uint64 {
	if x != nil {
		return x.ValidBefore
	}
	return 0
}

func (x *CSR) GetPublicKeyType() string {
	if x != nil {
		return x.PublicKeyType
	}
	return ""
}

func (x *CSR) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type CSR_CriticalOptionValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  CSR_CriticalOption `protobuf:"varint,1,opt,name=type,proto3,enum=ssh_cert.CSR_CriticalOption" json:"type,omitempty"`
	Value string             `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CSR_CriticalOptionValue) Reset() {
	*x = CSR_CriticalOptionValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSR_CriticalOptionValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSR_CriticalOptionValue) ProtoMessage() {}

func (x *CSR_CriticalOptionValue) ProtoReflect() protoreflect.Message {
	mi := &file_csr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSR_CriticalOptionValue.ProtoReflect.Descriptor instead.
func (*CSR_CriticalOptionValue) Descriptor() ([]byte, []int) {
	return file_csr_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CSR_CriticalOptionValue) GetType() CSR_CriticalOption {
	if x != nil {
		return x.Type
	}
	return CSR_FORCE_COMMAND
}

func (x *CSR_CriticalOptionValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CSR_ExtensionValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  CSR_Extension `protobuf:"varint,1,opt,name=type,proto3,enum=ssh_cert.CSR_Extension" json:"type,omitempty"`
	Value string        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CSR_ExtensionValue) Reset() {
	*x = CSR_ExtensionValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSR_ExtensionValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSR_ExtensionValue) ProtoMessage() {}

func (x *CSR_ExtensionValue) ProtoReflect() protoreflect.Message {
	mi := &file_csr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSR_ExtensionValue.ProtoReflect.Descriptor instead.
func (*CSR_ExtensionValue) Descriptor() ([]byte, []int) {
	return file_csr_proto_rawDescGZIP(), []int{0, 1}
}

func (x *CSR_ExtensionValue) GetType() CSR_Extension {
	if x != nil {
		return x.Type
	}
	return CSR_NO_TOUCH_REQUIRED
}

func (x *CSR_ExtensionValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_csr_proto protoreflect.FileDescriptor

var file_csr_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x73, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x73, 0x68,
	0x5f, 0x63, 0x65, 0x72, 0x74, 0x22, 0xb2, 0x06, 0x0a, 0x03, 0x43, 0x53, 0x52, 0x12, 0x26, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x73,
	0x68, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x53, 0x52, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x73, 0x73, 0x68, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x53, 0x52, 0x2e, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x73, 0x68, 0x5f, 0x63, 0x65, 0x72,
	0x74, 0x2e, 0x43, 0x53, 0x52, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x1a, 0x5d, 0x0a, 0x13, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x73, 0x73, 0x68, 0x5f,
	0x63, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x53, 0x52, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x53, 0x0a, 0x0e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x73, 0x73, 0x68, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x43,
	0x53, 0x52, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1a, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x4f,
	0x53, 0x54, 0x10, 0x01, 0x22, 0x37, 0x0a, 0x0e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f,
	0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x22, 0x9a, 0x01,
	0x0a, 0x09, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x4e,
	0x4f, 0x5f, 0x54, 0x4f, 0x55, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x5f, 0x58, 0x31, 0x31,
	0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1b, 0x0a,
	0x17, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x4f,
	0x52, 0x57, 0x41, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x45,
	0x52, 0x4d, 0x49, 0x54, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54,
	0x5f, 0x50, 0x54, 0x59, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x43, 0x10, 0x05, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x73, 0x6f, 0x6e, 0x72, 0x69,
	0x67, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x73, 0x68, 0x2d, 0x63, 0x65, 0x72, 0x74, 0x2d, 0x67, 0x72,
	0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_csr_proto_rawDescOnce sync.Once
	file_csr_proto_rawDescData = file_csr_proto_rawDesc
)

func file_csr_proto_rawDescGZIP() []byte {
	file_csr_proto_rawDescOnce.Do(func() {
		file_csr_proto_rawDescData = protoimpl.X.CompressGZIP(file_csr_proto_rawDescData)
	})
	return file_csr_proto_rawDescData
}

var file_csr_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_csr_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_csr_proto_goTypes = []interface{}{
	(CSR_Type)(0),                   // 0: ssh_cert.CSR.Type
	(CSR_CriticalOption)(0),         // 1: ssh_cert.CSR.CriticalOption
	(CSR_Extension)(0),              // 2: ssh_cert.CSR.Extension
	(*CSR)(nil),                     // 3: ssh_cert.CSR
	(*CSR_CriticalOptionValue)(nil), // 4: ssh_cert.CSR.CriticalOptionValue
	(*CSR_ExtensionValue)(nil),      // 5: ssh_cert.CSR.ExtensionValue
}
var file_csr_proto_depIdxs = []int32{
	0, // 0: ssh_cert.CSR.type:type_name -> ssh_cert.CSR.Type
	4, // 1: ssh_cert.CSR.criticalOptions:type_name -> ssh_cert.CSR.CriticalOptionValue
	5, // 2: ssh_cert.CSR.extensions:type_name -> ssh_cert.CSR.ExtensionValue
	1, // 3: ssh_cert.CSR.CriticalOptionValue.type:type_name -> ssh_cert.CSR.CriticalOption
	2, // 4: ssh_cert.CSR.ExtensionValue.type:type_name -> ssh_cert.CSR.Extension
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_csr_proto_init() }
func file_csr_proto_init() {
	if File_csr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_csr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSR_CriticalOptionValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSR_ExtensionValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_csr_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_csr_proto_goTypes,
		DependencyIndexes: file_csr_proto_depIdxs,
		EnumInfos:         file_csr_proto_enumTypes,
		MessageInfos:      file_csr_proto_msgTypes,
	}.Build()
	File_csr_proto = out.File
	file_csr_proto_rawDesc = nil
	file_csr_proto_goTypes = nil
	file_csr_proto_depIdxs = nil
}
